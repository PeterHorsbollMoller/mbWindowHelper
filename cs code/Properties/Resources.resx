<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ASK_LOCATE_TAB_FILE_OR_GRID_FILE" xml:space="preserve">
    <value>Do you want to find the tab file or the grid file?</value>
  </data>
  <data name="ASK_LOCATE_TAB_FILE_OR_RASTER_FILE" xml:space="preserve">
    <value>Do you want to find the tab file or the raster file?</value>
  </data>
  <data name="BTN_HLP_AUTOLOCK_WINDOWS" xml:space="preserve">
    <value>Turn on/off auto locking of windows\nAuto lock window</value>
  </data>
  <data name="BTN_HLP_CLONE_FRONT_WINDOW" xml:space="preserve">
    <value>Clone active window\nClone window</value>
  </data>
  <data name="BTN_HLP_CLOSE_FRONT_WINDOW" xml:space="preserve">
    <value>Close active window\nClose window</value>
  </data>
  <data name="BTN_HLP_LOCK_FRONT_WINDOW" xml:space="preserve">
    <value>Lock active window from closing\nLock window</value>
  </data>
  <data name="BTN_HLP_RESTORE_CLOSED_WINDOW" xml:space="preserve">
    <value>Restore closed window\nRestore closed window</value>
  </data>
  <data name="BTN_HLP_SET_WINDOW_SIZE_POSITION_USING_BASE_WINDOW" xml:space="preserve">
    <value>Set preferred size and position on front window\nSet preferred size and position</value>
  </data>
  <data name="BTN_HLP_UNLOCK_FRONT_WINDOW" xml:space="preserve">
    <value>Unlock active window from closing\nUnlock window</value>
  </data>
  <data name="DLG_BASE_WINDOW_X" xml:space="preserve">
    <value>Base windows ({0})</value>
  </data>
  <data name="DLG_MODIFY_WINDOW" xml:space="preserve">
    <value>Modify Window</value>
  </data>
  <data name="DLG_TTL_CREATE_MAP_EXTENT" xml:space="preserve">
    <value>Create Map Extent</value>
  </data>
  <data name="DLG_TTL_RESTORE_WINDOWS" xml:space="preserve">
    <value>Restore windows</value>
  </data>
  <data name="DLG_TXT_CREATE_EXTENT_OF" xml:space="preserve">
    <value>Create Map Extent of</value>
  </data>
  <data name="DLG_TXT_EXTENT_STYLE" xml:space="preserve">
    <value>Map Extent Style</value>
  </data>
  <data name="DLG_TXT_PICK_WINDOW_TO_RESTORE" xml:space="preserve">
    <value>Pick window to restore</value>
  </data>
  <data name="ERR_ENTER_NAME_FOR_NEW_BASE_WINDOW" xml:space="preserve">
    <value>Please enter a name of the new base window!</value>
  </data>
  <data name="ERR_FRONT_WIN_NOT_MAPPER" xml:space="preserve">
    <value>The active window must be a mapper window!</value>
  </data>
  <data name="ERR_INVALID_XML" xml:space="preserve">
    <value>The XML is invalid!</value>
  </data>
  <data name="ERR_NO_MAP_WIN_OPEN" xml:space="preserve">
    <value>The must be at least one map window open!</value>
  </data>
  <data name="ERR_NO_WINDOWS_TO_RESTORE" xml:space="preserve">
    <value>There are no windows to restore!</value>
  </data>
  <data name="ERR_NO_WIN_OPEN" xml:space="preserve">
    <value>The must be at least one window open!</value>
  </data>
  <data name="ERR_OPEN_WINDOW_TO_READ_SIZE_POSITION" xml:space="preserve">
    <value>Please open a window to read the size and position from!</value>
  </data>
  <data name="ERR_OPEN_WINDOW_TO_RESIZE_REPOSITION" xml:space="preserve">
    <value>Please open a window to resize and reposition!</value>
  </data>
  <data name="ERR_OPEN_WINDOW_TO_SAVE_TO_WOR" xml:space="preserve">
    <value>Please open a window to save to a workspace!</value>
  </data>
  <data name="ERR_SELECT_BASE_WINDOW_TO_UPDATE" xml:space="preserve">
    <value>Please select the base window to update!</value>
  </data>
  <data name="ERR_SELECT_NON_TEMPORAL_LAYER_IN_LAYER_CONTROL" xml:space="preserve">
    <value>Please select a non temporal layer in the Layer Control! </value>
  </data>
  <data name="ERR_SELECT_NORMAL_LAYER_IN_LAYER_CONTROL" xml:space="preserve">
    <value>Please select a normal layer!</value>
  </data>
  <data name="ERR_SELECT_NORMAL_OR_RASTER_OR_GRID_LAYER_IN_LAYER_CONTROL" xml:space="preserve">
    <value>Please select a normal or raster/grid layer!</value>
  </data>
  <data name="ERR_SELECT_ONE_LAYER_IN_LAYER_CONTROL" xml:space="preserve">
    <value>Please select one layer in the Layer Control!</value>
  </data>
  <data name="ERR_SELECT_ONE_MAP_IN_LAYER_CONTROL" xml:space="preserve">
    <value>Please select one map in the Layer Control!</value>
  </data>
  <data name="ERR_SELECT_ONE_TABLE_IN_TABLE_LIST" xml:space="preserve">
    <value>Please select one table in the TableList window!</value>
  </data>
  <data name="LST_CLOSED_WINDOWS_ALL" xml:space="preserve">
    <value>All Closed Windows</value>
  </data>
  <data name="LST_CLOSED_WINDOWS_BROWSERS" xml:space="preserve">
    <value>Closed Browser Windows</value>
  </data>
  <data name="LST_CLOSED_WINDOWS_LAYOUTS" xml:space="preserve">
    <value>Closed Layout Windows</value>
  </data>
  <data name="LST_CLOSED_WINDOWS_MAPS" xml:space="preserve">
    <value>Closed Map Windows</value>
  </data>
  <data name="LST_WINDOWS_ALL" xml:space="preserve">
    <value>All Windows</value>
  </data>
  <data name="LST_WINDOWS_BROWSERS" xml:space="preserve">
    <value>Browser Windows</value>
  </data>
  <data name="LST_WINDOWS_LAYOUTS" xml:space="preserve">
    <value>Layout Windows</value>
  </data>
  <data name="LST_WINDOWS_LEGENDS" xml:space="preserve">
    <value>Legend Designer Windows</value>
  </data>
  <data name="LST_WINDOWS_MAPS" xml:space="preserve">
    <value>Map Windows</value>
  </data>
  <data name="LST_WINDOWS_SPECIAL" xml:space="preserve">
    <value>Special Windows</value>
  </data>
  <data name="MNU_ABOUT_PROGRAM_X" xml:space="preserve">
    <value>&amp;About {0}...</value>
  </data>
  <data name="MNU_CLOSE_TABLE" xml:space="preserve">
    <value>Close Table</value>
  </data>
  <data name="MNU_CREATE_MAP_EXTENT" xml:space="preserve">
    <value>Create Map Extent...</value>
  </data>
  <data name="MNU_END_PROGRAM" xml:space="preserve">
    <value>&amp;End Program</value>
  </data>
  <data name="MNU_HELP" xml:space="preserve">
    <value>&amp;Help</value>
  </data>
  <data name="MNU_HLP_AUTOLOCK_ALL_WINDOWS" xml:space="preserve">
    <value>Autolock all windows</value>
  </data>
  <data name="MNU_HLP_CLONE_WINDOW" xml:space="preserve">
    <value>Clone window</value>
  </data>
  <data name="MNU_HLP_CLOSE_TABLE" xml:space="preserve">
    <value>Closes the selected table</value>
  </data>
  <data name="MNU_HLP_CLOSE_WINDOW" xml:space="preserve">
    <value>Close window</value>
  </data>
  <data name="MNU_HLP_CREATE_MAP_EXTENT" xml:space="preserve">
    <value>Create a Map Extent into a map or table.</value>
  </data>
  <data name="MNU_HLP_DOCK_WINDOW" xml:space="preserve">
    <value>Make window dockable</value>
  </data>
  <data name="MNU_HLP_LAYOUT_CLONE_VIEW" xml:space="preserve">
    <value>Display a clone of the active layout</value>
  </data>
  <data name="MNU_HLP_LOCATE_FILE_IN_EXPLORER" xml:space="preserve">
    <value>Finds a file in Windows Explorer related to the selected table</value>
  </data>
  <data name="MNU_HLP_LOCK_WINDOW" xml:space="preserve">
    <value>Lock window</value>
  </data>
  <data name="MNU_HLP_MOFIFY_WINDOW" xml:space="preserve">
    <value>Modify Window</value>
  </data>
  <data name="MNU_HLP_OPEN_TABFILE_IN_TEXT_EDITOR" xml:space="preserve">
    <value>Open the selected tab file in</value>
  </data>
  <data name="MNU_HLP_RESTORE_CLOSED_WINDOWS" xml:space="preserve">
    <value>Restore one or more windows closed during this session</value>
  </data>
  <data name="MNU_HLP_RESTORE_WINDOW" xml:space="preserve">
    <value>Restore closed window</value>
  </data>
  <data name="MNU_HLP_RESTORE_WINDOWS_NOW" xml:space="preserve">
    <value>Restore Window Positions To The Saved State</value>
  </data>
  <data name="MNU_HLP_SAVE_WINDOW_TO_WOR" xml:space="preserve">
    <value>Saves the active window to a workspace without the 'Open Table ...' statements</value>
  </data>
  <data name="MNU_HLP_SETUP_BASE_WINDOWS" xml:space="preserve">
    <value>Setup base windows with size and position</value>
  </data>
  <data name="MNU_HLP_SET_DEFAULT_VIEW_ALL_LAYERS" xml:space="preserve">
    <value>Set default view on all layers in map</value>
  </data>
  <data name="MNU_HLP_SET_DEFAULT_VIEW_SINGLE_LAYER" xml:space="preserve">
    <value>Set default view on selected layer</value>
  </data>
  <data name="MNU_HLP_STORE_WINDOWS_NOW" xml:space="preserve">
    <value>Store the current position of the windows</value>
  </data>
  <data name="MNU_HLP_STORE_WINDOW_POSITIONS" xml:space="preserve">
    <value>Specify which windows automatically to store positions of</value>
  </data>
  <data name="MNU_HLP_TOGGLE_RESTORE_WINDOWS_ON_START" xml:space="preserve">
    <value>Restore window positions when the program starts</value>
  </data>
  <data name="MNU_HLP_TOGGLE_SHOW_LAYER_CONTROL" xml:space="preserve">
    <value>Automatically show the Layer Control window on startup</value>
  </data>
  <data name="MNU_HLP_TOGGLE_SHOW_TABLE_LIST" xml:space="preserve">
    <value>Automatically show the TableList window on startup</value>
  </data>
  <data name="MNU_HLP_TOGGLE_STORE_WINDOWS_ON_EXIT" xml:space="preserve">
    <value>Store window positions when the program ends</value>
  </data>
  <data name="MNU_HLP_UNLOCK_WINDOW" xml:space="preserve">
    <value>Unlock window</value>
  </data>
  <data name="MNU_HLP_VIEW_ENTIRE_MAP" xml:space="preserve">
    <value>Zooms to the entire view of the layers map</value>
  </data>
  <data name="MNU_HLP_ZOOM_TO_FIRST" xml:space="preserve">
    <value>Zoom to First</value>
  </data>
  <data name="MNU_HLP_ZOOM_TO_LAST" xml:space="preserve">
    <value>Zoom to Last</value>
  </data>
  <data name="MNU_HLP_ZOOM_TO_NEXT" xml:space="preserve">
    <value>Zoom to Next</value>
  </data>
  <data name="MNU_HLP_ZOOM_TO_PREVIOUS" xml:space="preserve">
    <value>Zoom to Previous</value>
  </data>
  <data name="MNU_LAYOUT_CLONE_VIEW" xml:space="preserve">
    <value>Clone View</value>
  </data>
  <data name="MNU_LOCATE_FILE_IN_EXPLORER" xml:space="preserve">
    <value>Locate File In Windows Explorer</value>
  </data>
  <data name="MNU_OPEN_TABFILE_IN_TEXT_EDITOR" xml:space="preserve">
    <value>Open Tab File In</value>
  </data>
  <data name="MNU_RESTORE_CLOSED_WINDOWS" xml:space="preserve">
    <value>&amp;Restore Closed Window...</value>
  </data>
  <data name="MNU_RESTORE_WINDOWS_NOW" xml:space="preserve">
    <value>Restore Window Positions Now</value>
  </data>
  <data name="MNU_SAVE_WINDOW_TO_WOR" xml:space="preserve">
    <value>Save Window To Workspace Without 'Open table ...' statements</value>
  </data>
  <data name="MNU_SETUP_BASE_WINDOWS" xml:space="preserve">
    <value>Setup Base Windows...</value>
  </data>
  <data name="MNU_SET_DEFAULT_VIEW_ALL_LAYERS" xml:space="preserve">
    <value>Set Default View On All Layers</value>
  </data>
  <data name="MNU_SET_DEFAULT_VIEW_SINGLE_LAYER" xml:space="preserve">
    <value>Set Default View</value>
  </data>
  <data name="MNU_SET_WINDOW_SIZE_POSITION_USING_BASE_WINDOW" xml:space="preserve">
    <value>Set Rreferred Size And Position On Front Window</value>
  </data>
  <data name="MNU_SHOW_ALL_WINDOWS" xml:space="preserve">
    <value>Show &amp;All Windows</value>
  </data>
  <data name="MNU_SHOW_INFO_WINDOW" xml:space="preserve">
    <value>Show The &amp;Info Window</value>
  </data>
  <data name="MNU_SHOW_LEGEND_WINDOW" xml:space="preserve">
    <value>Show The &amp;Legend Window</value>
  </data>
  <data name="MNU_SHOW_MAPBASIC_WINDOW" xml:space="preserve">
    <value>Show The Map&amp;Basic Window</value>
  </data>
  <data name="MNU_SHOW_MESSAGE_WINDOW" xml:space="preserve">
    <value>Show The &amp;Message Window</value>
  </data>
  <data name="MNU_SHOW_RULER_WINDOW" xml:space="preserve">
    <value>Show The &amp;Ruler Window</value>
  </data>
  <data name="MNU_SHOW_STATISTICS_WINDOW" xml:space="preserve">
    <value>Show The &amp;Statistics Window</value>
  </data>
  <data name="MNU_SHOW_WINDOW" xml:space="preserve">
    <value>&amp;Show Window</value>
  </data>
  <data name="MNU_STORE_WINDOWS_NOW" xml:space="preserve">
    <value>Store Window Positions Now</value>
  </data>
  <data name="MNU_STORE_WINDOW_POSITIONS" xml:space="preserve">
    <value>&amp;Auto Store Position Of Windows</value>
  </data>
  <data name="MNU_TOGGLE_RESTORE_WINDOWS_ON_START" xml:space="preserve">
    <value>Restore Window Positions On Startup</value>
  </data>
  <data name="MNU_TOGGLE_SHOW_LAYER_CONTROL" xml:space="preserve">
    <value>Show &amp;Layer Control On Startup</value>
  </data>
  <data name="MNU_TOGGLE_SHOW_TABLE_LIST" xml:space="preserve">
    <value>Show &amp;TableList On Startup</value>
  </data>
  <data name="MNU_TOGGLE_STORE_WINDOWS_ON_EXIT" xml:space="preserve">
    <value>Store Window Positions On Exit</value>
  </data>
  <data name="MNU_VIEW_ENTIRE_MAP" xml:space="preserve">
    <value>View Entire Map</value>
  </data>
  <data name="PICK_WOR_TO_SAVE_WINDOW_TO" xml:space="preserve">
    <value>Select workspace to save window to...</value>
  </data>
  <data name="QUEST_AUTOSTORE_WINDOW_POSITIONS" xml:space="preserve">
    <value>WindowHelper can store size and position of windows on exit and restore these windows when it starts up next time. {\n}{\n}Do you want to turn this on?</value>
  </data>
  <data name="QUEST_CLOSE_WINDOW" xml:space="preserve">
    <value>Are you sure that you want to close this window: {0} ?</value>
  </data>
  <data name="STR_APPLY" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="STR_CHANGE" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="STR_CLOSE" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="STR_CLOSE_WINDOW" xml:space="preserve">
    <value>Close Window</value>
  </data>
  <data name="STR_COSM_LAYER_IN" xml:space="preserve">
    <value>Cosmetic layer in</value>
  </data>
  <data name="STR_CREATE" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="STR_EDIT_LAYER_IN" xml:space="preserve">
    <value>Editable Layer in</value>
  </data>
  <data name="STR_GRID_FILE" xml:space="preserve">
    <value>Grid File</value>
  </data>
  <data name="STR_HEIGHT" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="STR_NAME" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="STR_NEW_BASE_WINDOW" xml:space="preserve">
    <value>New base window</value>
  </data>
  <data name="STR_NO" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="STR_OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="STR_POSITION" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="STR_RASTER_FILE" xml:space="preserve">
    <value>Raster File</value>
  </data>
  <data name="STR_RESTORE" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="STR_TABLE" xml:space="preserve">
    <value>Table</value>
  </data>
  <data name="STR_TAB_FILE" xml:space="preserve">
    <value>Tab File</value>
  </data>
  <data name="STR_UPDATE" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="STR_USE_DEFAULT_WINDOW_NAME" xml:space="preserve">
    <value>Use Default Window Name</value>
  </data>
  <data name="STR_WIDTH" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="STR_WINDOW_NAME" xml:space="preserve">
    <value>Window Title</value>
  </data>
  <data name="STR_X" xml:space="preserve">
    <value>X</value>
  </data>
  <data name="STR_Y" xml:space="preserve">
    <value>Y</value>
  </data>
  <data name="STR_YES" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="TAB_CLOSED" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="TAB_CURRENT" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="TAB_SPECIAL" xml:space="preserve">
    <value>Special</value>
  </data>
  <data name="VIEW_OF_VIEWS" xml:space="preserve">
    <value>{0} of {1}</value>
  </data>
</root>