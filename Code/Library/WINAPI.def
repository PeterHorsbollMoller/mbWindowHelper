Define SW_HIDE				0
Define SW_SHOWNORMAL		1
Define SW_SHOWMINIMIZED		2
Define SW_SHOWMAXIMIZED		3
Define SW_SHOWNOACTIVATE		4
Define SW_SHOW				5
Define SW_MINIMIZE			6
Define SW_SHOWMINNOACTIVE	7
Define SW_SHOWNA			8
Define SW_RESTORE			9
Define SW_SHOWDEFAULT		10
Define SW_MAXIMIZE			11
Define SW_FORCEMINIMIZE    	11

Define ERROR_OUT_OF_MEMORY 		0
Define ERROR_FILE_NOT_FOUND 		2
Define ERROR_PATH_NOT_FOUND 		3
Define ERROR_ACCESS_DENIED		5
Define ERROR_BAD_FORMAT 			11
Define ERROR_NO_MORE_FILES		18
Define ERROR_NO_ASSOCIATION 		31

Type POINTAPI
     x As Integer
     y As Integer
End Type

Declare Function WAPIShellExecute Lib "shell32.dll" Alias "ShellExecuteA"
		( ByVal hwnd As Integer			'Can be zero or a pointer to the MapInfo Window
		, ByVal sOperation As String		'Operation to perform on the file
								'edit:	Launches an editor and opens the document for editing. If lpFile is not a document file, the function will fail.
								'explore:	Explores a folder specified by lpFile.
								'find:	Initiates a search beginning in the directory specified by lpDirectory.
								'open:	Opens the item specified by the lpFile parameter. The item can be a file or folder.
								'print:	Prints the file specified by lpFile. If lpFile is not a document file, the function fails.
								'NULL:	In systems prior to Windows 2000, the default verb is used if it is valid and available in the registry.
								'		If not, the "open" verb is used.
								'		In Windows 2000 and later, the default verb is used if available. If not, the "open" verb is used.
								'		If neither verb is available, the system uses the first verb listed in the registry

		, ByVal sFile As String			'File to perform the operation on
		, ByVal sParameters As String		'Parameters to send to the file
		, ByVal sDirectory As String		'Default working directory
		, ByVal nShowCmd As Integer		'How to display the application performing the operation
									'SW_HIDE:			Hides the window and activates another window.
									'SW_MAXIMIZE:		Maximizes the specified window.
									'SW_MINIMIZE:		Minimizes the specified window and activates the next top-level window in the z-order.
									'SW_RESTORE:		Activates and displays the window. If the window is minimized or maximized, Windows restores it to its original size and position. An application should specify this flag when restoring a minimized window.
									'SW_SHOW:			Activates the window and displays it in its current size and position.
									'SW_SHOWDEFAULT:		Sets the show state based on the SW_ flag specified in the STARTUPINFO structure passed to the CreateProcess function by the program that started the application. An application should call ShowWindow with this flag to set the initial show state of its main window.
									'SW_SHOWMAXIMIZED:	Activates the window and displays it as a maximized window.
									'SW_SHOWMINIMIZED:	Activates the window and displays it as a minimized window.
									'SW_SHOWMINNOACTIVE:	Displays the window as a minimized window. The active window remains active.
									'SW_SHOWNA:			Displays the window in its current state. The active window remains active.
									'SW_SHOWNOACTIVATE:	Displays a window in its most recent size and position. The active window remains active.
									'SW_SHOWNORMAL:		Activates and displays a window. If the window is minimized or maximized, Windows restores it to its original size and position. An application should specify this flag when displaying the window for the first time.


		) As Integer
'http://msdn.microsoft.com/en-us/library/bb762153(VS.85).aspx

Declare Function WAPIFindExecutable Lib "shell32.dll" Alias "FindExecutableA"
		( ByVal lpFile As String		'The address of a null-terminated string that specifies a file name. This file should be a document.
		, ByVal lpDirectory As String		'The address of a null-terminated string that specifies the default directory. This value can be NULL.
		, lpResult As String			'The address of a buffer that receives the file name of the associated executable file
								'This parameter must contain a valid non-null value and is assumed to be of length MAX_PATH.
								'Responsibility for validating the value is left to the programmer.
		) As Integer
'http://msdn.microsoft.com/en-us/library/bb776419(VS.85).aspx

'**Create a single folder - must be the "last" in the path given
Declare Function WAPICreateDirectory Lib "kernel32" Alias "CreateDirectoryA"
		( ByVal sPath as String
		, ByVal nSecurityAttributes as Integer
		) as Integer
'http://msdn.microsoft.com/en-us/library/bb762130(VS.85).aspx
'**err = WAPICreateDirectory("c:\test",0)

'**Create a folder structure - will create the entire path given
Declare Function WAPICreateDirectoryEx Lib "shell32.dll" Alias "SHCreateDirectoryExA"
		( ByVal hWnd as Integer				'Can be zero or a pointer to the MapInfo Window
		, ByVal sPath as String				'The folder structure/path to create
		, ByVal nSecurityAttributes as Integer	'zero
		) As Integer
'http://msdn.microsoft.com/en-us/library/bb762131(VS.85).aspx
'**err = WAPICreateDirectoryEx(0,"c:\test\test1\test2",0)

Declare Function WAPIGetCursorPosition Lib "user32" Alias "GetCursorPos" (lpPoint As POINTAPI) As Integer

'-------------------------------------
'Win32 API Imports local to this module:
Declare Function GetPrivateProfileString Lib "KERNEL32.DLL" Alias "GetPrivateProfileStringA"
	( ByVal lpAppName As String		'The name of the section containing the key name.
							'If this parameter is NULL, the GetPrivateProfileString function copies all section names in the file to the supplied buffer.
	, ByVal lpKeyName As String		'The name of the key whose associated string is to be retrieved.
							'If this parameter is NULL, all key names in the section specified by the lpAppName parameter are copied to the buffer specified by the lpReturnedString parameter.
	, ByVal lpDefault As String		'A default string. If the lpKeyName key cannot be found in the initialization file, GetPrivateProfileString copies the default string to the lpReturnedString buffer.
							'If this parameter is NULL, the default is an empty string, "". Avoid specifying a default string with trailing blank characters.
							'The function inserts a null character in the lpReturnedString buffer to strip any trailing blanks.
	, lpReturnedString As String		'A pointer to the buffer that receives the retrieved string.
	, ByVal nSize As Integer		'The size of the buffer pointed to by the lpReturnedString parameter, in characters.
	, ByVal lpFileName As String		'The name of the initialization file. If this parameter does not contain a full path to the file, the system searches for the file in the Windows directory.
  	) As Integer
'http://msdn.microsoft.com/en-us/library/ms724353(v=vs.85).aspx

Declare Function GetPrivateProfileInt Lib "KERNEL32.DLL" Alias "GetPrivateProfileIntA"
	( ByVal lpAppName As String		'The name of the section containing the key name.
	, ByVal lpKeyName As String		'The name of the key whose value is to be retrieved.
							'This value is in the form of a string; the GetPrivateProfileInt function converts the string into an integer and returns the integer.
	, ByVal nDefault As Integer		'The default value to return if the key name cannot be found in the initialization file.
	, ByVal lpFileName As String		'The name of the initialization file. If this parameter does not contain a full path to the file, the system searches for the file in the Windows directory.
	) As Integer
'http://msdn.microsoft.com/en-us/library/ms724345(v=vs.85).aspx

Declare Function WritePrivateProfileString Lib "KERNEL32.DLL" Alias "WritePrivateProfileStringA"
	( ByVal lpAppName As String	'The name of the section to which the string will be copied. If the section does not exist, it is created.
						'The name of the section is case-independent; the string can be any combination of uppercase and lowercase letters.
	, ByVal lpKeyName As String	'The name of the key to be associated with a string. If the key does not exist in the specified section, it is created.
						'If this parameter is NULL, the entire section, including all entries within the section, is deleted.
	, ByVal lpString As String	'A null-terminated string to be written to the file. If this parameter is NULL, the key pointed to by the lpKeyName parameter is deleted.
	, ByVal lpFileName As String	'The name of the initialization file.
						'If the file was created using Unicode characters, the function writes Unicode characters to the file. Otherwise, the function writes ANSI characters.
	) As Integer
'http://msdn.microsoft.com/en-us/library/ms725501(v=vs.85).aspx

Declare Function DeleteKey Lib "KERNEL32.DLL" Alias "WritePrivateProfileStringA"
	( ByVal lpAppName As String	'The name of the section to which the string will be copied. If the section does not exist, it is created.
						'The name of the section is case-independent; the string can be any combination of uppercase and lowercase letters.
	, ByVal lpKeyName As String	'The name of the key to be associated with a string. If the key does not exist in the specified section, it is created.
						'If this parameter is NULL, the entire section, including all entries within the section, is deleted.
	, ByVal lpString As Integer	'Passing 0 here will remove the key from the section
						'A null-terminated string to be written to the file. If this parameter is NULL, the key pointed to by the lpKeyName parameter is deleted.
	, ByVal lpFileName As String	'The name of the initialization file.
						'If the file was created using Unicode characters, the function writes Unicode characters to the file. Otherwise, the function writes ANSI characters.
	) As Integer
'http://msdn.microsoft.com/en-us/library/aa389869(v=vs.85).aspx

Declare Function DeleteSection Lib "KERNEL32.DLL" Alias "WritePrivateProfileStringA"
	( ByVal lpAppName As String	'The name of the section to which the string will be copied. If the section does not exist, it is created.
						'The name of the section is case-independent; the string can be any combination of uppercase and lowercase letters.
	, ByVal lpKeyName As Integer	'Passing 0 here will remove the key from the section
						'The name of the key to be associated with a string. If the key does not exist in the specified section, it is created.
						'If this parameter is NULL, the entire section, including all entries within the section, is deleted.
	, ByVal lpString As Integer	'Passing 0 here will remove the key from the section
						'A null-terminated string to be written to the file. If this parameter is NULL, the key pointed to by the lpKeyName parameter is deleted.
	, ByVal lpFileName As String	'The name of the initialization file.
						'If the file was created using Unicode characters, the function writes Unicode characters to the file. Otherwise, the function writes ANSI characters.
	) As Integer
'http://msdn.microsoft.com/en-us/library/aa389869(v=vs.85).aspx
